@{
    ViewData["Title"] = "Home Page";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/vue/3.2.30/vue.global.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.11.6/dist/umd/popper.min.js" integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div id="app">
    <button type="button" v-on:click="clickQueryMockWebApiPage">Query</button>
    <button type="button" class="btn btn-primary" v-on:click="clickShowAddMockWebApiPanel(true)">Add MockWebApi</button>
    <table v-if="showAddMockWebApiPanel">
        <tr>
            <td>ProductName</td>
            <td><input type="text" v-model="addMockWebApiForm.productName"/></td>
        </tr>
        <tr>
            <td>ControllerName</td>
            <td><input type="text" v-model="addMockWebApiForm.controllerName"/></td>
        </tr>
        <tr>
            <td>ActionName</td>
            <td><input type="text" v-model="addMockWebApiForm.actionName"/></td>
        </tr>
        <tr>
            <td>Response Content</td>
            <td><input type="text" v-model="addMockWebApiForm.responseContent"/></td>
        </tr>
        <tr>
            <td>Response Status</td>
            <td><input type="text" v-model="addMockWebApiForm.responseStatus"/></td>
        </tr>
        <tr>
            <td>
                <button type="button" v-on:click="clickAddMockWebApi">Add</button>
                <button type="button" v-on:click="clickShowAddMockWebApiPanel(false)">Cancel</button>
            </td>
        </tr>
    </table>
    <table class="table">
        <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">ProductName</th>
            <th scope="col">ControllerName</th>
            <th scope="col">ActionName</th>
            <th scope="col">RequestContent</th>
            <th scope="col">ResponseContent</th>
            <th scope="col">ResponseStatus</th>
        </tr>
        </thead>

        <tbody>
        <tr v-for="item in mockWebApiData">
            <th scope="row">1</th>
            <td>{{ item.productName }}</td>
            <td>{{ item.controllerName }}</td>
            <td>{{ item.actionName }}</td>
            <td>{{ item.requestContent }}</td>
            <td>{{ item.responseContent }}</td>
            <td>{{ item.responseStatus }}</td>
        </tr>
        </tbody>
    </table>
</div>

<script>
async function postAsync(actionName, data) {
    return await fetch(`/api/MgmtApi/${actionName}`, {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    });
}
</script>

<script>
const { createApp, reactive, ref, onMounted } = Vue;
const app = createApp({
    setup(){
         const mockWebApiData = reactive([
            {
                productName: "santa",
                controllerName: "Customer",
                actionName: "GetCustomer",
                requestContent: "",
                responseContent: `{"id": 123}`,
                responseStatus: 200
            },
            {
                productName: "santa",
                controllerName: "Customer",
                actionName: "AddCustomer",
                requestContent: "",
                responseContent: `{"code": 123}`,
                responseStatus: 200
            }
        ]);
        const showAddMockWebApiPanel = ref(false);
        const addMockWebApiForm = reactive({
            productName: "santa",
            controllerName: "Customer",
            actionName: "GetCustomer",
            responseContent: `{"id": 123}`,
            responseStatus: 200
        });
        const clickShowAddMockWebApiPanel = (enabled) => {
            showAddMockWebApiPanel.value = enabled;
        };
        const clickAddMockWebApi = async () => {
            const resp = await postAsync('CreateDefaultResponse', addMockWebApiForm);
            alert("success");
        };
        const clickQueryMockWebApiPage = async () => {
            const resp = await postAsync('QueryDefaultResponsePage', {
                borderBlockStartWidth: 0,
                pageSize: 20
            });
            const data = await resp.json();
            console.log('d', data.pageData);
            mockWebApiData.length = 0;
            Object.assign(mockWebApiData, data.pageData);
        };
        
        onMounted(() => {
            clickQueryMockWebApiPage();
        });
        
        return { 
            mockWebApiData,
            showAddMockWebApiPanel,
            addMockWebApiForm,
            clickShowAddMockWebApiPanel,
            clickAddMockWebApi,
            clickQueryMockWebApiPage
        };
    }
});
app.mount("#app");
</script>