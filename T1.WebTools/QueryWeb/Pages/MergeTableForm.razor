@page "/mergeTableForm"

<PageTitle>Merge Table</PageTitle>

<table class="table">
    <tbody>
    <tr>
        <td>
            <input type="text" class="form-control" placeholder="textbox" disabled>
            <select multiple class="form-control" id="exampleFormControlSelect2" size="10" style="overflow-y: scroll;">
                <option>Option 1</option>
                <option>Option 2</option>
                <option>Option 3</option>
                <option>Option 4</option>
                <option>Option 5</option>
                <option>Option 6</option>
                <option>Option 7</option>
                <option>Option 8</option>
                <option>Option 9</option>
                <option>Option 10</option>
                <option>Option 11</option>
                <option>Option 12</option>
            </select>
        </td>
        <td></td>
        <td><input type="text" class="form-control" placeholder="textbox"></td>
    </tr>
    <tr>
        <td><select class="form-select"><option>listbox</option></select></td>
        <td><button type="button" class="btn btn-primary">button</button></td>
        <td><select class="form-select"><option>listbox</option></select></td>
    </tr>
    <tr>
        <td colspan="3">
            <input type="text" class="form-control" placeholder="merge talbe name">
        </td>
    </tr>
    <tr>
        <td colspan="3">
            <textarea class="form-control" rows="10">areatext</textarea>
        </td>
    </tr>
    </tbody>
  </table>


@using QueryWeb.Shared
@using QueryKits.Services
@using Prism.Events
@inject IReportRepo _reportRepo
@inject IJSRuntime _jsRuntime
@inject IEventAggregator EventAggregator
@inject IQueryService QueryService

@code {
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                //var t = await _jsRuntime.InvokeAsync<string[]>("getDrivesAsync");
            }
            catch (Exception e)
            {
                Console.WriteLine("load wasm fail" + e.Message);
            }
        }
        return Task.CompletedTask;
    }
}