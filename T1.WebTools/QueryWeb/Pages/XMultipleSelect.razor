@using QueryWeb.Models
@using NPOI.SS.Formula.Functions
@using T1.Standard.Linq
<select multiple=""
        class="form-control"
        size="10"
        style="overflow-y: scroll;"
        @onchange="HandleChange">
    @foreach (var item in Options.Select((val, idx) => new {val, idx}))
    {
        <option value="@item.idx">@item.val.Text</option>
    }
</select>

@code {

    [Parameter]
    public List<SelectItem> Options { get; set; } = new();

    [Parameter]
    public List<SelectItem> ItemsSelected { get; set; } = new();

    [Parameter]
    public EventCallback<MultipleSelectedArgs> OnSelected { get; set; }

    private async Task HandleChange(ChangeEventArgs e)
    {
        var selectedValues = e.Value as string[];
        if (selectedValues == null)
        {
            selectedValues = Array.Empty<string>();
        }
        var selectedOptions = selectedValues
            .Select(x => Options[int.Parse(x)])
            .ToList();

        foreach (var option in selectedOptions)
        {
            if (!ItemsSelected.Contains(option))
            {
                ItemsSelected.Add(option);
            }
        }

        var excludeSelectedOptions = ItemsSelected.LeftJoinExclude(
            selectedOptions, option => option.Text,
            selected => selected.Text,
            selected => selected)
            .ToList();
        foreach (var selected in excludeSelectedOptions)
        {
            ItemsSelected.Remove(selected);
        }

        await OnSelected.InvokeAsync(new MultipleSelectedArgs
        {
            ItemsSelected = ItemsSelected
        });
    }

}