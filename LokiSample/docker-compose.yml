version: '3.4'

networks:
  loki:

services:
  lokisample:
    image: ${DOCKER_REGISTRY-}lokisample
    build:
      context: .
      dockerfile: LokiSample/Dockerfile
    environment:
      loki: http://loki:3100
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    ports:
      - 8085:80
      - 8086:443
    depends_on:
      loki:
        condition: service_healthy
    networks:
      - loki

  promtail:
    image: grafana/promtail:2.2.1
    volumes:
      - d:/demo/var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki

  #seq:
  #  container_name: seq
  #  image: datalust/seq
  #  ports:
  #    - 8100:80
  #    - 8101:5341
  #  environment:
  #    - ACCEPT_EULA=Y
  #    - SEQ_ADDRESS=http://seq:5341
  #  entrypoint: /run.sh
  #  command: --memory=1g --memory-swap=1g 
  #  restart: unless-stopped
  #  volumes:
  #    - d:/demo/datadrive:/data

  loki:
    container_name: loki
    image: grafana/loki:master
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:3100/ready 
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - loki

  grafana:
    container_name: grafana
    image: grafana/grafana:master
    ports:
      - "3000:3000"
    depends_on:
      loki:
        condition: service_healthy
    networks:
      - loki
